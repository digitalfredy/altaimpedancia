$date
	Wed Oct  7 16:43:15 2009
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module Laboratorio2_Lab $end
$var wire 1 ! RtaComparador22Numeros6Bit_Compuertas $end
$var wire 1 " RtaComparador22Numeros6Bit_Decodificador $end
$var wire 1 # RtaComparador22Numeros6Bit_Multiplexor $end
$var wire 8 $ RtaDecodificador3a8[7:0] $end
$var wire 1 % RtaMultiplexor4a1 $end
$var reg 6 & Estimulo[5:0] $end
$var reg 3 ' EstimuloDecodificador3a8[2:0] $end
$scope module U1 $end
$var wire 6 ( Entrada[5:0] $end
$var wire 22 ) Nodo[21:0] $end
$var wire 1 ! Salida $end
$upscope $end
$scope module U2 $end
$var wire 8 * BusImpar[7:0] $end
$var wire 22 + BusOr[21:0] $end
$var wire 8 , BusPar[7:0] $end
$var wire 6 - Entrada[5:0] $end
$var wire 1 " Salida $end
$scope module U1 $end
$var wire 3 . Entrada[2:0] $end
$var wire 8 / Salida[7:0] $end
$upscope $end
$scope module U2 $end
$var wire 3 0 Entrada[2:0] $end
$var wire 8 1 Salida[7:0] $end
$upscope $end
$upscope $end
$scope module U3 $end
$var wire 4 2 BusMultiplexor[3:0] $end
$var wire 6 3 Entrada[5:0] $end
$var wire 1 # Salida $end
$scope module U1 $end
$var wire 4 4 BusOr[3:0] $end
$var wire 4 5 Entrada[3:0] $end
$var wire 1 # Salida $end
$var wire 2 6 Selector[1:0] $end
$upscope $end
$upscope $end
$scope module U4 $end
$var wire 3 7 Entrada[2:0] $end
$var wire 8 8 Salida[7:0] $end
$upscope $end
$scope module U5 $end
$var wire 4 9 BusOr[3:0] $end
$var wire 4 : Entrada[3:0] $end
$var wire 1 % Salida $end
$var wire 2 ; Selector[1:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 ;
b0 :
b0 9
b10000000 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b10000000 1
b0 0
b10000000 /
b0 .
b0 -
b10000000 ,
b0 +
b10000000 *
b0 )
b0 (
b0 '
b0 &
0%
b10000000 $
0#
0"
0!
$end
#1
1!
1"
b1000000000000000000000 )
b1 +
b0x0x 2
b0x0x 5
b1000000 *
b1000000 1
b1 &
b1 (
b1 -
b1 0
b1 3
b1 :
b1000000 $
b1000000 8
b1 '
b1 7
#2
1"
x#
bx000 4
b100000000000000000000 )
b10 +
bx00x 2
bx00x 5
b100000 *
b100000 1
b10 &
b10 (
b10 -
b10 0
b10 3
b10 :
b100000 $
b100000 8
b10 '
b10 7
#3
b10000000000000000000 )
b100 +
bx0x 2
bx0x 5
b10000 *
b10000 1
b11 &
b11 (
b11 -
b11 0
b11 3
b11 :
b10000 $
b10000 8
b11 '
b11 7
#4
0!
0"
x#
bx000 4
b0 )
b0 +
bx0 2
bx0 5
b1000 *
b1000 1
b100 &
b100 (
b100 -
b100 0
b100 3
b100 :
b1000 $
b1000 8
b100 '
b100 7
#5
1!
1"
bx0xx 2
bx0xx 5
b1000000000000000000 )
b1000 +
b100 *
b100 1
b101 &
b101 (
b101 -
b101 0
b101 3
b101 :
b100 $
b100 8
b101 '
b101 7
#6
0!
0"
0#
b0 4
b0 )
b0 +
b0x0 2
b0x0 5
b10 *
b10 1
b110 &
b110 (
b110 -
b110 0
b110 3
b110 :
b10 $
b10 8
b110 '
b110 7
#7
b1 *
b1 1
b111 &
b111 (
b111 -
b111 0
b111 3
b111 :
b1 $
b1 8
b111 '
b111 7
#8
b0 2
b0 5
1%
b1000000 ,
b1000000 /
b1000 9
b10000000 *
b10000000 1
b1 .
b1000 &
b1000 (
b1000 -
b0 0
b1000 3
b1000 :
b10000000 $
b10000000 8
b0 '
b0 7
#9
b0x0 2
b0x0 5
b1000000 *
b1000000 1
b1001 &
b1001 (
b1001 -
b1 0
b1001 3
b1001 :
#10
1!
1"
b100000000000000000 )
b10000 +
b0x 2
b0x 5
b100000 *
b100000 1
b1010 &
b1010 (
b1010 -
b10 0
b1010 3
b1010 :
#11
0!
0"
b0 2
b0 5
b0 )
b0 +
b10000 *
b10000 1
b1011 &
b1011 (
b1011 -
b11 0
b1011 3
b1011 :
#12
1!
1"
b0x 2
b0x 5
b10000000000000000 )
b100000 +
b1000 *
b1000 1
b1100 &
b1100 (
b1100 -
b100 0
b1100 3
b1100 :
#13
b1000000000000000 )
b1000000 +
b100 *
b100 1
b1101 &
b1101 (
b1101 -
b101 0
b1101 3
b1101 :
#14
0!
0"
b0x0 2
b0x0 5
b0 )
b0 +
b10 *
b10 1
b1110 &
b1110 (
b1110 -
b110 0
b1110 3
b1110 :
#15
1!
1"
b0xx 2
b0xx 5
b100000000000000 )
b10000000 +
b1 *
b1 1
b1111 &
b1111 (
b1111 -
b111 0
b1111 3
b1111 :
#16
0!
0"
b0 2
b0 5
0%
b0 )
b0 +
b100000 ,
b100000 /
b0 9
b10000000 *
b10000000 1
b1 6
b1 ;
b10 .
b10000 &
b10000 (
b10000 -
b0 0
b10000 3
b0 :
#17
x#
b0x00 4
b0x0x 2
b0x0x 5
b1000000 *
b1000000 1
b10001 &
b10001 (
b10001 -
b1 0
b10001 3
b1 :
#18
0#
b0 4
bx00x 2
bx00x 5
b100000 *
b100000 1
b10010 &
b10010 (
b10010 -
b10 0
b10010 3
b10 :
#19
x#
b0x00 4
bx0x 2
bx0x 5
b10000 *
b10000 1
b10011 &
b10011 (
b10011 -
b11 0
b10011 3
b11 :
#20
1!
1"
x#
b10000000000000 )
b100000000 +
b0x00 4
1%
bx0 2
bx0 5
b100 9
b1000 *
b1000 1
b10100 &
b10100 (
b10100 -
b100 0
b10100 3
b100 :
#21
0#
b0 4
bx0xx 2
bx0xx 5
b1000000000000 )
b1000000000 +
b100 *
b100 1
b10101 &
b10101 (
b10101 -
b101 0
b10101 3
b101 :
#22
1"
b100000000000 )
b10000000000 +
b0x0 2
b0x0 5
b10 *
b10 1
b10110 &
b10110 (
b10110 -
b110 0
b10110 3
b110 :
#23
b10000000000 )
b100000000000 +
b1 *
b1 1
b10111 &
b10111 (
b10111 -
b111 0
b10111 3
b111 :
#24
0!
0"
b0 2
b0 5
0%
b0 )
b0 +
b10000 ,
b10000 /
b0 9
b10000000 *
b10000000 1
b11 .
b11000 &
b11000 (
b11000 -
b0 0
b11000 3
b1000 :
#25
1!
1"
b0x0 2
b0x0 5
b1000000000 )
b1000000000000 +
b1000000 *
b1000000 1
b11001 &
b11001 (
b11001 -
b1 0
b11001 3
b1001 :
#26
0!
0"
b0x 2
b0x 5
b0 )
b0 +
b100000 *
b100000 1
b11010 &
b11010 (
b11010 -
b10 0
b11010 3
b1010 :
#27
b0 2
b0 5
b10000 *
b10000 1
b11011 &
b11011 (
b11011 -
b11 0
b11011 3
b1011 :
#28
b0x 2
b0x 5
1%
b100 9
b1000 *
b1000 1
b11100 &
b11100 (
b11100 -
b100 0
b11100 3
b1100 :
#29
b100 *
b100 1
b11101 &
b11101 (
b11101 -
b101 0
b11101 3
b1101 :
#30
1!
1"
b100000000 )
b10000000000000 +
b0x0 2
b0x0 5
b10 *
b10 1
b11110 &
b11110 (
b11110 -
b110 0
b11110 3
b1110 :
#31
b0xx 2
b0xx 5
b10000000 )
b100000000000000 +
b1 *
b1 1
b11111 &
b11111 (
b11111 -
b111 0
b11111 3
b1111 :
#32
1!
1"
0#
b0 2
b0 5
b0 4
0%
b1000000 )
b1000000000000000 +
b1000 ,
b1000 /
b0 9
b10000000 *
b10000000 1
b10 6
b10 ;
b100 .
b100000 &
b100000 (
b100000 -
b0 0
b100000 3
b0 :
#33
b100000 )
b10000000000000000 +
b0x0x 2
b0x0x 5
b1000000 *
b1000000 1
b100001 &
b100001 (
b100001 -
b1 0
b100001 3
b1 :
#34
0!
0"
1%
b0 )
b0 +
bx00x 2
bx00x 5
b10 9
b100000 *
b100000 1
b100010 &
b100010 (
b100010 -
b10 0
b100010 3
b10 :
#35
1!
1"
b10000 )
b100000000000000000 +
bx0x 2
bx0x 5
b10000 *
b10000 1
b100011 &
b100011 (
b100011 -
b11 0
b100011 3
b11 :
#36
x#
b0x0 4
0!
0"
0%
b0 )
b0 +
bx0 2
bx0 5
b0 9
b1000 *
b1000 1
b100100 &
b100100 (
b100100 -
b100 0
b100100 3
b100 :
#37
bx0xx 2
bx0xx 5
b100 *
b100 1
b100101 &
b100101 (
b100101 -
b101 0
b100101 3
b101 :
#38
1%
b0x0 2
b0x0 5
b10 9
b10 *
b10 1
b100110 &
b100110 (
b100110 -
b110 0
b100110 3
b110 :
#39
b1 *
b1 1
b100111 &
b100111 (
b100111 -
b111 0
b100111 3
b111 :
#40
0#
b0 4
b0 +
b0 2
b0 5
0%
b100 ,
b100 /
b0 9
b10000000 *
b10000000 1
b101 .
b101000 &
b101000 (
b101000 -
b0 0
b101000 3
b1000 :
#41
x#
b0x0 4
b0x0 2
b0x0 5
b1000000 *
b1000000 1
b101001 &
b101001 (
b101001 -
b1 0
b101001 3
b1001 :
#42
0#
b0 4
b0x 2
b0x 5
1%
b10 9
b100000 *
b100000 1
b101010 &
b101010 (
b101010 -
b10 0
b101010 3
b1010 :
#43
b0 2
b0 5
b10000 *
b10000 1
b101011 &
b101011 (
b101011 -
b11 0
b101011 3
b1011 :
#44
b0x 2
b0x 5
0%
b0 9
b1000 *
b1000 1
b101100 &
b101100 (
b101100 -
b100 0
b101100 3
b1100 :
#45
b100 *
b100 1
b101101 &
b101101 (
b101101 -
b101 0
b101101 3
b1101 :
#46
x#
b0x0 4
b0x0 2
b0x0 5
1%
b10 9
b10 *
b10 1
b101110 &
b101110 (
b101110 -
b110 0
b101110 3
b1110 :
#47
b0xx 2
b0xx 5
b1 *
b1 1
b101111 &
b101111 (
b101111 -
b111 0
b101111 3
b1111 :
#48
0#
b0 2
b0 5
0%
b0 4
b10 ,
b10 /
b0 9
b10000000 *
b10000000 1
b11 6
b11 ;
b110 .
b110000 &
b110000 (
b110000 -
b0 0
b110000 3
b0 :
#49
x#
b0x 4
b0x0x 2
b0x0x 5
1%
b1000000 *
b1000000 1
b1 9
b110001 &
b110001 (
b110001 -
b1 0
b110001 3
b1 :
#50
1!
1"
b1000 )
b1000000000000000000 +
bx00x 2
bx00x 5
0%
b100000 *
b100000 1
b0 9
b110010 &
b110010 (
b110010 -
b10 0
b110010 3
b10 :
#51
b100 )
b10000000000000000000 +
bx0x 2
bx0x 5
1%
b10000 *
b10000 1
b1 9
b110011 &
b110011 (
b110011 -
b11 0
b110011 3
b11 :
#52
1!
1"
0#
b0 4
b10 )
b100000000000000000000 +
bx0 2
bx0 5
0%
b1000 *
b1000 1
b0 9
b110100 &
b110100 (
b110100 -
b100 0
b110100 3
b100 :
#53
x#
b0x 4
bx0xx 2
bx0xx 5
b1 )
b1000000000000000000000 +
1%
b100 *
b100 1
b1 9
b110101 &
b110101 (
b110101 -
b101 0
b110101 3
b101 :
#54
0!
0"
0#
b0 4
b0 )
b0 +
b0x0 2
b0x0 5
0%
b10 *
b10 1
b0 9
b110110 &
b110110 (
b110110 -
b110 0
b110110 3
b110 :
#55
1%
b1 *
b1 1
b1 9
b110111 &
b110111 (
b110111 -
b111 0
b110111 3
b111 :
#56
b0 2
b0 5
0%
b1 ,
b1 /
b10000000 *
b10000000 1
b0 9
b111 .
b111000 &
b111000 (
b111000 -
b0 0
b111000 3
b1000 :
#57
b0x0 2
b0x0 5
1%
b1000000 *
b1000000 1
b1 9
b111001 &
b111001 (
b111001 -
b1 0
b111001 3
b1001 :
#58
x#
b0x 4
b0x 2
b0x 5
0%
b100000 *
b100000 1
b0 9
b111010 &
b111010 (
b111010 -
b10 0
b111010 3
b1010 :
#59
0#
b0 4
b0 2
b0 5
1%
b10000 *
b10000 1
b1 9
b111011 &
b111011 (
b111011 -
b11 0
b111011 3
b1011 :
#60
x#
b0x 4
b0x 2
b0x 5
0%
b1000 *
b1000 1
b0 9
b111100 &
b111100 (
b111100 -
b100 0
b111100 3
b1100 :
#61
1%
b100 *
b100 1
b1 9
b111101 &
b111101 (
b111101 -
b101 0
b111101 3
b1101 :
#62
0#
b0 4
b0x0 2
b0x0 5
0%
b10 *
b10 1
b0 9
b111110 &
b111110 (
b111110 -
b110 0
b111110 3
b1110 :
