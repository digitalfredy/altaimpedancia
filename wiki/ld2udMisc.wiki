#summary Enlaces relacionados y más
#labels verilog,linux,ld2ud

== Quick Reference ==
 * [http://www.sutherland-hdl.com/online_verilog_ref_guide/vlog_ref_top.html online Verilog-1995 Quick Reference Guide] - Stuart Sutherland

 * [http://www.hpcc.ecs.soton.ac.uk/hpci/tools/vlogref.pdf Verilog HDL QUICK REFERENCE CARD V2.1]


 * http://fpga.com.ar/notas/NotasCompletas.htm

== Recursos de Universidades ==

 * [http://labspace.open.ac.uk/course/view.php?id=4616 Verilog for FPGA's] The open university
 * [http://www.ee.ucla.edu/~herwin/ocdma/reference/ ]HERWIN CHAN, - University of California
 * [http://www.eecs.harvard.edu/cs141/resources/verilog-tutorial.pdf Computer Science 141] - Harvard University
  * [http://www.eecs.harvard.edu/cs141/resources/verilog-tutorial.pdf Verilog Tutorial] - Harvard University
 * [http://www.see.ed.ac.uk/~gerard/Teach/gateway.html GATEWAY to design excellence] - Dr Gerard M Blair, University of Edinburgh, Scotland, UK 
  * [http://www.see.ed.ac.uk/~gerard/Teach/Verilog/manual/ Verilog Manual] - Dr Gerard M Blair, University of Edinburgh, Scotland, UK
 * http://www.ee.ed.ac.uk/~gerard/VLSI/verilog.ps
 * [http://www.eg.bucknell.edu/~cs320/2008-fall/verilog/verilog-manual.html Handbook on Verilog HDL] - Dr. Daniel C. Hyde, Bucknell University
  * [http://www.ncsu.edu/wcae/ISCA1998/hyde.pdf Using Verilog HDL to Teach Computer Architecture Concepts] -     Dr. Daniel C. Hyde, Bucknell University
 * [http://www.inf.ed.ac.uk/teaching/courses/cd/VerilogTutorial.pdf Verilog Tutorial] - Deepak Kumar Tala, University of Edinburgh
 * [http://staff.washington.edu/jon/verilog-prog.html Notes on Verilog programming] - Jonathan Jacky, University of Washington
 * [http://www.stanford.edu/class/ee183/ ee183] - Stanford.edu
  * [http://www.stanford.edu/class/ee272/doc/faq/verilog.html Verilog FAQ]


 * [http://people.csail.mit.edu/wentzlaf//faq/verilog.html Faq] mit

== Tutoriales ==
 * [http://www.cpu-turkey.com/downloads/file.aspx?id=88 Verilog Tutorial VLSI II] - E. Özgür ATES
 * [http://electrosofts.com/verilog/index.html Verilog Tutorial] - Harsha Perla, electrosofts
 * [http://www.doulos.com/knowhow/verilog_designers_guide/ The Designer’s Guide to Verilog] - Doulos
 * [http://www.asic-world.com/verilog/veritut.html Verilog Tutorial] - asic-world

== FAQ's ==
 * [http://www.angelfire.com/in/verilogfaq/ Alternative Verilog FAQ]
 * [http://www.asic-world.com/verilog/verifaq1.html] asic-world

== En español ==
 * [http://www.inf.ed.ac.uk/teaching/courses/cd/VerilogTutorial.pdf Tutorial de verilog]
 * [http://www.matpic.com/HDL/HDL_tutorial_verilog.html]

== misc ==
 * [http://books.google.com/books?id=-aI0VXNaPQUC&pg=PA37&lpg=PA37&dq=verilog+abstraction+levels&source=bl&ots=rr7U4HxoFZ&sig=zfCVBTH4khzJ1pPNni4jux5fq-I&hl=es&ei=oyumSrWaK9Xktgek_9zWDw&sa=X&oi=book_result&ct=result&resnum=7#v=onepage&q=verilog%20abstraction%20levels&f=false The complete Verilog book]
 * [http://liberty.princeton.edu/Research/Modeling/verilog.php Abstractions in Verilog] - Liberty Resarch Group

= Reglas y notas para código ==
 * Todo el código dentro de la carpeta code
 * Archivos .v con mismo Header (//url altaimpedanca)
 * Todos con footer base (/* base */)
  * Marca de Entregable: en el footer (Laboratorio, Teoría)
  * url alternativa (code.google...)
 * Código autoexplicativo en vez de comentarios
Los nombres de los archivos deben describir claramente la funcionalidad del módulo y su nombre debe coincidir con el del modulo que describe, se usa CamelCase, ejemplo:
{{{
NombreDeArchivo.v == NombreDeModulo
}}}
Como muchas veces luego aparece un mejor nombre esta es la forma de cambiar el nombre:
{{{
$ svn mv NombreInicial.v NombreNuevo.v
$ sed -i 's/NombreInicial/NombreNuevo/g' `grep -l NombreIncial *`
}}}

Como agregar el header a varios archivos?
{{{
sed -i '1i\//http://ld2ud.altaimpedancia.org - más información en el pié de página\n' *.v
sed -i '1i\//Electrónica con Software Libre, Free Hardware Design y Open Source Hardware' *.v
}}}

Pie de página:
{{{
/* Para escribir, compilar y visualizar se usó Software Libre:
  * Debian GNU/Linux como sistema operativo
  * GNU Emacs 22.2.1 con verilog-mode 404 para escribir el codigo Verilog (.v)
  * Icarus Verilog version 0.8.6 para compilar y simular
  * GTKWave Analyzer v3.1.10 para visualizar el resultado de las simulaciones (.vcd)
 * Autor: Fredy Pulido López (digitalfredy)
 * Copyright: http://www.fsf.org/licensing/licenses/gpl.html
 * Agradecimientos:
*/
}}}