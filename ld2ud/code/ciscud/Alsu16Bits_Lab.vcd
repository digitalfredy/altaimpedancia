$date
	Thu Dec  3 02:04:39 2009
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module Alsu16Bits_Lab $end
$var wire 1 ! Cy $end
$var wire 1 " Ov $end
$var wire 16 # Respuesta[15:0] $end
$var reg 4 $ Funcion[3:0] $end
$var reg 16 % TuplaA[15:0] $end
$var reg 16 & TuplaB[15:0] $end
$scope module Alsu $end
$var wire 16 ' EntradaA[15:0] $end
$var wire 16 ( EntradaB[15:0] $end
$var wire 4 ) Selector[3:0] $end
$var wire 2 * _s0[1:0] $end
$var wire 2 + _s22[1:0] $end
$var wire 2 , _s44[1:0] $end
$var wire 2 - _s66[1:0] $end
$var wire 17 . _s88[16:0] $end
$var wire 17 / _s96[16:0] $end
$var wire 17 0 _s100[16:0] $end
$var wire 17 1 _s108[16:0] $end
$var wire 2 2 _s116[1:0] $end
$var wire 17 3 _s121[16:0] $end
$var wire 1 " _s129 $end
$var wire 17 4 _s133[16:0] $end
$var wire 1 " _s140 $end
$var wire 17 5 _s144[16:0] $end
$var wire 1 " _s150 $end
$var wire 17 6 _s154[16:0] $end
$var wire 1 " _s161 $end
$var wire 17 7 _s165[16:0] $end
$var reg 1 ! Acarreo $end
$var reg 1 " Desbordamiento $end
$var reg 16 8 Salida[15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 8
b0z 7
b0z 6
bz0000000000000000 5
bz0000000000000000 4
bz0000000000000000 3
bz 2
bz0000000000000000 1
bz0000000000000000 0
bz0000000000000000 /
bz0000000000000000 .
bz -
bz ,
bz +
bz *
b0 )
b1 (
b1111111111111111 '
b1 &
b1111111111111111 %
b0 $
b0 #
z"
z!
$end
#1
b1 #
bz0000000000000001 .
bz0000000000000001 /
bz0000000000000001 0
bz0000000000000001 1
bz0000000000000001 3
bz0000000000000001 4
bz0000000000000001 5
b1z 6
b1z 7
b1 8
b1 $
b1 )
#2
b1111111111111110 #
bz1111111111111110 .
bz1111111111111110 /
bz1111111111111110 0
bz1111111111111110 1
bz1111111111111110 3
bz1111111111111110 4
bz1111111111111110 5
b1111111111111110z 6
b1111111111111110z 7
b1111111111111110 8
b10 $
b10 )
#3
b1111111111111111 #
bz1111111111111111 .
bz1111111111111111 /
bz1111111111111111 0
bz1111111111111111 1
bz1111111111111111 3
bz1111111111111111 4
bz1111111111111111 5
b1111111111111111z 6
b1111111111111111z 7
b1111111111111111 8
b11 $
b11 )
#4
0!
b0z *
b0z +
b0z ,
b0z -
b0z 2
b1111111111111110 #
b1111111111111110 .
b1111111111111110 /
b1111111111111110 0
b1111111111111110 1
b1111111111111110 3
b1111111111111110 4
b1111111111111110 5
b11111111111111100 6
b11111111111111100 7
b1111111111111110 8
b100 $
b100 )
#5
1!
b1z *
b1z +
b1z ,
b1z -
b1z 2
b0 #
b10000000000000000 .
b10000000000000000 /
b10000000000000000 0
b10000000000000000 1
b10000000000000000 3
b10000000000000000 4
b10000000000000000 5
b1 6
b1 7
b0 8
b101 $
b101 )
#6
0!
b0z *
b0z +
b0z ,
b0z -
b0z 2
b1111111111111110 #
b1111111111111110 .
b1111111111111110 /
b1111111111111110 0
b1111111111111110 1
b1111111111111110 3
b1111111111111110 4
b1111111111111110 5
b11111111111111100 6
b11111111111111100 7
b1111111111111110 8
b110 $
b110 )
#7
1!
b1z *
b1z +
b1z ,
b1z -
b1z 2
b0 #
b10000000000000000 .
b10000000000000000 /
b10000000000000000 0
b10000000000000000 1
b10000000000000000 3
b10000000000000000 4
b10000000000000000 5
b1 6
b1 7
b0 8
b111 $
b111 )
#8
b1111111111111111 #
b1111111111111111 8
z!
bz *
bz +
bz ,
bz -
bz1111111111111111 .
bz1111111111111111 /
bz1111111111111111 0
bz1111111111111111 1
bz 2
bz1111111111111111 3
bz1111111111111111 4
bz1111111111111111 5
b1111111111111111z 6
b1111111111111111z 7
b1000 $
b1000 )
#9
b1001 $
b1001 )
#10
0!
b0z *
b0z +
b0z ,
b0z -
b0z 2
b1111111111111110 #
b1111111111111110 .
b1111111111111110 /
b1111111111111110 0
b1111111111111110 1
b1111111111111110 3
b1111111111111110 4
b1111111111111110 5
b11111111111111100 6
b11111111111111100 7
b1111111111111110 8
b1010 $
b1010 )
#11
b1011 $
b1011 )
#12
1!
b1z *
b1z +
b1z ,
b1z -
b11111111111111110 .
b11111111111111110 /
b11111111111111110 0
b11111111111111110 1
b1z 2
b11111111111111110 3
b11111111111111110 4
b11111111111111110 5
b11111111111111101 6
b11111111111111101 7
b1100 $
b1100 )
#13
b1111111111111111 #
b11111111111111111 .
b11111111111111111 /
b11111111111111111 0
b11111111111111111 1
b11111111111111111 3
b11111111111111111 4
b11111111111111111 5
b11111111111111111 6
b11111111111111111 7
b1111111111111111 8
b1101 $
b1101 )
#14
b111111111111111 #
b10111111111111111 .
b10111111111111111 /
b10111111111111111 0
b10111111111111111 1
b10111111111111111 3
b10111111111111111 4
b10111111111111111 5
b1111111111111111 6
b1111111111111111 7
b111111111111111 8
b1110 $
b1110 )
#15
b1111111111111111 #
b11111111111111111 .
b11111111111111111 /
b11111111111111111 0
b11111111111111111 1
b11111111111111111 3
b11111111111111111 4
b11111111111111111 5
b11111111111111111 6
b11111111111111111 7
b1111111111111111 8
b1111 $
b1111 )
#16
z!
bz *
bz +
bz ,
bz -
bz 2
b0 $
b0 )
b111 %
b111 '
b1111111111111000 #
bz1111111111111000 .
bz1111111111111000 /
bz1111111111111000 0
bz1111111111111000 1
bz1111111111111000 3
bz1111111111111000 4
bz1111111111111000 5
b1111111111111000z 6
b1111111111111000z 7
b1111111111111000 8
#17
b1 #
bz0000000000000001 .
bz0000000000000001 /
bz0000000000000001 0
bz0000000000000001 1
bz0000000000000001 3
bz0000000000000001 4
bz0000000000000001 5
b1z 6
b1z 7
b1 8
b1 $
b1 )
#18
b110 #
bz0000000000000110 .
bz0000000000000110 /
bz0000000000000110 0
bz0000000000000110 1
bz0000000000000110 3
bz0000000000000110 4
bz0000000000000110 5
b110z 6
b110z 7
b110 8
b10 $
b10 )
#19
b111 #
bz0000000000000111 .
bz0000000000000111 /
bz0000000000000111 0
bz0000000000000111 1
bz0000000000000111 3
bz0000000000000111 4
bz0000000000000111 5
b111z 6
b111z 7
b111 8
b11 $
b11 )
#20
0!
b0z *
b0z +
b0z ,
b0z -
b0z 2
b110 #
b110 .
b110 /
b110 0
b110 1
b110 3
b110 4
b110 5
b1100 6
b1100 7
b110 8
b100 $
b100 )
#21
b1000 #
b1000 .
b1000 /
b1000 0
b1000 1
b1000 3
b1000 4
b1000 5
b10000 6
b10000 7
b1000 8
b101 $
b101 )
#22
b110 #
b110 .
b110 /
b110 0
b110 1
b110 3
b110 4
b110 5
b1100 6
b1100 7
b110 8
b110 $
b110 )
#23
b1000 #
b1000 .
b1000 /
b1000 0
b1000 1
b1000 3
b1000 4
b1000 5
b10000 6
b10000 7
b1000 8
b111 $
b111 )
#24
b111 #
b111 8
z!
bz *
bz +
bz ,
bz -
bz0000000000000111 .
bz0000000000000111 /
bz0000000000000111 0
bz0000000000000111 1
bz 2
bz0000000000000111 3
bz0000000000000111 4
bz0000000000000111 5
b111z 6
b111z 7
b1000 $
b1000 )
#25
b1001 $
b1001 )
#26
0!
b0z *
b0z +
b0z ,
b0z -
b0z 2
b110 #
b110 .
b110 /
b110 0
b110 1
b110 3
b110 4
b110 5
b1100 6
b1100 7
b110 8
b1010 $
b1010 )
#27
b1011 $
b1011 )
#28
b1110 #
b1110 .
b1110 /
b1110 0
b1110 1
b1110 3
b1110 4
b1110 5
b11100 6
b11100 7
b1110 8
b1100 $
b1100 )
#29
b1101 $
b1101 )
#30
b11 #
b11 8
1!
b1z *
b1z +
b1z ,
b1z -
b10000000000000011 .
b10000000000000011 /
b10000000000000011 0
b10000000000000011 1
b1z 2
b10000000000000011 3
b10000000000000011 4
b10000000000000011 5
b111 6
b111 7
b1110 $
b1110 )
#31
b1000000000000011 #
b11000000000000011 .
b11000000000000011 /
b11000000000000011 0
b11000000000000011 1
b11000000000000011 3
b11000000000000011 4
b11000000000000011 5
b10000000000000111 6
b10000000000000111 7
b1000000000000011 8
b1111 $
b1111 )
#32
b1111111111111000 #
b1111111111111000 8
z!
bz *
bz +
bz ,
bz -
bz1111111111111000 .
bz1111111111111000 /
bz1111111111111000 0
bz1111111111111000 1
bz 2
bz1111111111111000 3
bz1111111111111000 4
bz1111111111111000 5
b1111111111111000z 6
b1111111111111000z 7
b0 $
b0 )
#33
b1 #
bz0000000000000001 .
bz0000000000000001 /
bz0000000000000001 0
bz0000000000000001 1
bz0000000000000001 3
bz0000000000000001 4
bz0000000000000001 5
b1z 6
b1z 7
b1 8
b1 $
b1 )
