$date
	Sun Sep 13 11:20:28 2009
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module Laboratorio1 $end
$var wire 1 ! RtaAndOperadorBitABit_Funcional $end
$var wire 1 " RtaAndOperadorCondicional_Funcional $end
$var wire 1 # RtaAndUsandoNand_Estructural $end
$var wire 1 $ RtaXorOperadorCondicional_Funcional $end
$var wire 1 % RtaXorOperadorBitABit_Funcional $end
$var wire 1 & RtaXorUsandoNand_Estructural $end
$var reg 2 ' EstimuloCompuertas[1:0] $end
$scope module InstanciaAndOperadorBitABit_Funcional $end
$var wire 2 ( Entrada[1:0] $end
$var wire 1 ! Salida $end
$upscope $end
$scope module InstanciaAndOperadorCondicional_Funcional $end
$var wire 2 ) Entrada[1:0] $end
$var wire 1 " Salida $end
$upscope $end
$scope module InstanciaAndUsandoNand_Estructural $end
$var wire 1 * Cable $end
$var wire 2 + Entrada[1:0] $end
$var wire 1 # Salida $end
$upscope $end
$scope module InstanciaXorOperadorBitABit_Funcional $end
$var wire 2 , Entrada[1:0] $end
$var wire 1 % Salida $end
$upscope $end
$scope module InstanciaXorOperadorCondicional_Funcional $end
$var wire 2 - Entrada[1:0] $end
$var wire 1 $ Salida $end
$upscope $end
$scope module InstanciaXorUsandoNand_Estructural $end
$var wire 1 . CableA $end
$var wire 1 / CableB $end
$var wire 1 0 CableC $end
$var wire 1 1 CableD $end
$var wire 2 2 Entrada[1:0] $end
$var wire 1 & Salida $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 2
11
10
1/
1.
b0 -
b0 ,
b0 +
1*
b0 )
b0 (
b0 '
0&
0%
0$
0#
0"
0!
$end
#1
1$
1&
1%
0/
00
b1 '
b1 (
b1 )
b1 +
b1 ,
b1 -
b1 2
#2
1$
01
1&
0.
1%
1/
10
b10 '
b10 (
b10 )
b10 +
b10 ,
b10 -
b10 2
#3
0$
0&
1#
11
1!
1"
0*
0%
0/
b11 '
b11 (
b11 )
b11 +
b11 ,
b11 -
b11 2
#4
0#
1.
0!
0"
1*
0%
1/
b0 '
b0 (
b0 )
b0 +
b0 ,
b0 -
b0 2
