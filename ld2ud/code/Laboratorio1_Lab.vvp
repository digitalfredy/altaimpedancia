#! /usr/bin/vvp
:vpi_time_precision + 0;
:vpi_module "system";
S_0x843ef30 .scope module, "Laboratorio1" "Laboratorio1";
 .timescale 0;
V_$0x8437e28 .var "EstimuloCompuertas", 1, 0;
V_$0x8439218 .var "Palabra", 7, 0;
V_$0x843b548 .net "RtaAndOperadorBitABit_Funcional", 0, 0, L_0x843e5e8;
V_$0x843b238 .net "RtaAndOperadorCondicional_Funcional", 0, 0, L_0x843e6e8;
V_$0x843b288 .net "RtaAndUsandoNand_Estructural", 0, 0, L_0x843e698;
V_$0x843b2d8 .net "RtaDesplazaDerecha2Bits", 7, 0, V_$0x8439218[2], V_$0x8439218[3], V_$0x8439218[4], V_$0x8439218[5], V_$0x8439218[6], V_$0x8439218[7], C<0>, C<0>;
V_$0x8438980 .net "RtaRotaIzquierda2Bits", 7, 0, V_$0x8439218[2], V_$0x8439218[3], V_$0x8439218[4], V_$0x8439218[5], V_$0x8439218[6], V_$0x8439218[7], V_$0x8439218[0], V_$0x8439218[1];
V_$0x8438418 .net "RtaXorOperadorBitABit_Funcional", 0, 0, L_0x843ffb0;
V_$0x8438448 .net "RtaXorOperadorCondicional_Funcional", 0, 0, L_Laboratorio1.InstanciaXorOperadorCondicional_Funcional._s19/0;
V_$0x8438478 .net "RtaXorUsandoNand_Estructural", 0, 0, L_0x843fe40;
S_0x84396b8 .scope module, "InstanciaAndOperadorBitABit_Funcional" "AndOperadorBitABit_Funcional", S_0x843ef30;
 .timescale 0;
L_0x843e5e8 .functor AND, V_$0x8437e28[1], V_$0x8437e28[0], C<1>, C<1>;
V_$0x8439728 .net "Entrada", 1, 0, V_$0x8437e28[0], V_$0x8437e28[1];
V_$0x8439168 .net "Salida", 0, 0, L_0x843e5e8;
S_0x8439de8 .scope module, "InstanciaAndOperadorCondicional_Funcional" "AndOperadorCondicional_Funcional", S_0x843ef30;
 .timescale 0;
L_0x843e6e8 .functor AND, V_$0x8437e28[0], V_$0x8437e28[1], C<1>, C<1>;
V_$0x8439e58 .net "Entrada", 1, 0, V_$0x8437e28[0], V_$0x8437e28[1];
V_$0x8439688 .net "Salida", 0, 0, L_0x843e6e8;
S_0x8435d60 .scope module, "InstanciaAndUsandoNand_Estructural" "AndUsandoNand_Estructural", S_0x843ef30;
 .timescale 0;
L_0x843ab78 .functor NAND, V_$0x8437e28[1], V_$0x8437e28[0], C<1>, C<1>;
L_0x843e698 .functor NAND, L_0x843ab78, L_0x843ab78, C<1>, C<1>;
V_$0x8440958 .net "Cable", 0, 0, L_0x843ab78;
V_$0x8435df0 .net "Entrada", 1, 0, V_$0x8437e28[0], V_$0x8437e28[1];
V_$0x8439da8 .net "Salida", 0, 0, L_0x843e698;
S_0x843f070 .scope module, "InstanciaXorOperadorBitABit_Funcional" "XorOperadorBitABit_Funcional", S_0x843ef30;
 .timescale 0;
L_0x843ffb0 .functor XOR, V_$0x8437e28[1], V_$0x8437e28[0], C<0>, C<0>;
V_$0x8437dd8 .net "Entrada", 1, 0, V_$0x8437e28[0], V_$0x8437e28[1];
V_$0x8437e78 .net "Salida", 0, 0, L_0x843ffb0;
S_0x84408d8 .scope module, "InstanciaXorOperadorCondicional_Funcional" "XorOperadorCondicional_Funcional", S_0x843ef30;
 .timescale 0;
L_0x8440118 .functor AND, L_0x8440ac8, L_0x843fc80, C<1>, C<1>;
L_0x843e618 .functor AND, L_0x843fce8, L_0x8440060, C<1>, C<1>;
L_0x8440ac8 .functor NOT, V_$0x8437e28[1], C<0>, C<0>, C<0>;
L_0x843fc80 .functor BUF, V_$0x8437e28[0], C<0>, C<0>, C<0>;
L_0x843fce8 .functor NOT, V_$0x8437e28[0], C<0>, C<0>, C<0>;
L_0x8440060 .functor BUF, V_$0x8437e28[1], C<0>, C<0>, C<0>;
V_$0x8439a38 .net "Entrada", 1, 0, V_$0x8437e28[0], V_$0x8437e28[1];
V_$0x8436200 .net "Salida", 0, 0, L_Laboratorio1.InstanciaXorOperadorCondicional_Funcional._s19/0;
L_Laboratorio1.InstanciaXorOperadorCondicional_Funcional._s19/0 .functor MUXZ, L_0x843e618, C<1>, L_0x8440118, C<1>;
S_0x84407e0 .scope module, "InstanciaXorUsandoNand_Estructural" "XorUsandoNand_Estructural", S_0x843ef30;
 .timescale 0;
L_0x843fc50 .functor NAND, V_$0x8437e28[1], V_$0x8437e28[1], C<1>, C<1>;
L_0x8440008 .functor NAND, V_$0x8437e28[0], V_$0x8437e28[0], C<1>, C<1>;
L_0x843fdc0 .functor NAND, L_0x843fc50, V_$0x8437e28[0], C<1>, C<1>;
L_0x84400e8 .functor NAND, L_0x8440008, V_$0x8437e28[1], C<1>, C<1>;
L_0x843fe40 .functor NAND, L_0x843fdc0, L_0x84400e8, C<1>, C<1>;
V_$0x8439918 .net "CableA", 0, 0, L_0x843fc50;
V_$0x84385f8 .net "CableB", 0, 0, L_0x8440008;
V_$0x84380c0 .net "CableC", 0, 0, L_0x843fdc0;
V_$0x8438150 .net "CableD", 0, 0, L_0x84400e8;
V_$0x843a1b8 .net "Entrada", 1, 0, V_$0x8437e28[0], V_$0x8437e28[1];
V_$0x8439fd8 .net "Salida", 0, 0, L_0x843fe40;
S_0x843e200 .scope module, "InstanciaRotaIzquierda2Bits" "RotaIzquierda2Bits", S_0x843ef30;
 .timescale 0;
V_$0x843b670 .net "Entrada", 7, 0, V_$0x8439218[0], V_$0x8439218[1], V_$0x8439218[2], V_$0x8439218[3], V_$0x8439218[4], V_$0x8439218[5], V_$0x8439218[6], V_$0x8439218[7];
V_$0x8438bd0 .net "Salida", 7, 0, V_$0x8439218[2], V_$0x8439218[3], V_$0x8439218[4], V_$0x8439218[5], V_$0x8439218[6], V_$0x8439218[7], V_$0x8439218[0], V_$0x8439218[1];
S_0x843f968 .scope module, "InstanciaDesplazaDerecha2Bits" "DesplazaDerecha2Bits", S_0x843ef30;
 .timescale 0;
V_$0x843a268 .net "Entrada", 7, 0, V_$0x8439218[0], V_$0x8439218[1], V_$0x8439218[2], V_$0x8439218[3], V_$0x8439218[4], V_$0x8439218[5], V_$0x8439218[6], V_$0x8439218[7];
V_$0x843a318 .net "Salida", 7, 0, V_$0x8439218[2], V_$0x8439218[3], V_$0x8439218[4], V_$0x8439218[5], V_$0x8439218[6], V_$0x8439218[7], C<0>, C<0>;
    .scope S_0x843ef30;
T_0 ;
    %set/v V_$0x8437e28[0], 0, 2;
    %end;
    .thread T_0;
    .scope S_0x843ef30;
T_1 ;
    %mov 8, 0, 2;
    %mov 10, 1, 1;
    %mov 11, 0, 1;
T_1.0 %cmp/u 0, 8, 4;
    %jmp/0xz T_1.1, 5;
    %add 8, 1, 4;
    %delay 1;
    %load/v 12, V_$0x8437e28[0], 2;
    %addi 12, 1, 2;
    %assign V_$0x8437e28[0], 0, 12;
    %assign V_$0x8437e28[1], 0, 13;
    %jmp T_1.0;
T_1.1 ;
    %end;
    .thread T_1;
    .scope S_0x843ef30;
T_2 ;
    %set/v V_$0x8439218[0], 0, 8;
    %end;
    .thread T_2;
    .scope S_0x843ef30;
T_3 ;
    %mov 8, 0, 3;
    %mov 11, 1, 1;
    %mov 12, 0, 1;
T_3.0 %cmp/u 0, 8, 5;
    %jmp/0xz T_3.1, 5;
    %add 8, 1, 5;
    %delay 1;
    %load/v 13, V_$0x8439218[0], 8;
    %addi 13, 1, 8;
    %ix/load 0, 8;
    %assign/v0 V_$0x8439218[0], 0, 13;
    %jmp T_3.0;
T_3.1 ;
    %end;
    .thread T_3;
    .scope S_0x843ef30;
T_4 ;
    %vpi_call "$dumpfile", "Laboratorio1_Lab.vcd";
    %vpi_call "$dumpvars";
    %end;
    .thread T_4;
